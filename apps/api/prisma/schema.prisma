// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users{
  id Int @id @unique @default(autoincrement())
  username String
  email String @unique
  password String
  role String @default("customers")
  referrallCode String
  points String
  createAt DateTime @default(now())
  discount Discounts?
  dashboard Dashboards?
  reviews Reviews[]
  transactions Transactions[]
}

model Discounts{
  id Int @id @unique @default(autoincrement())
  userId Int @unique
  value String
  discountCategory String @default("point")
  createAt DateTime @default(now())
  expriredAt DateTime 
  user Users? @relation(fields: [userId], references: [id])
}

model Transactions {
  id Int @id @unique @default(autoincrement())
  userId Int 
  transactionDate DateTime @default(now())
  total Int
  status String @default("pending")
  createAt DateTime @default(now())
  ticket TicketsTransaction[]
  user Users @relation(fields: [userId], references: [id])
}

model Tickets{
  id Int @id @unique @default(autoincrement())
  eventId Int
  ticketType String @default("reguler")
  AvailableTicket Int
  price Int 
  sold Int @default(0)
  event Events @relation(fields: [eventId], references: [id])
  transaction TicketsTransaction[]
}

model TicketsTransaction {
  ticket Tickets @relation(fields: [ticketId], references: [id])
  ticketId Int 
  transaction Transactions @relation(fields: [transactionId], references: [id])
  transactionId Int 

  @@id([ticketId,transactionId])
}

model Dashboards {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  eventCount Int       @default(0)
  attendeeCount Int    @default(0)
  transactionCount Int @default(0)
  user      Users      @relation(fields: [userId], references: [id])
  events    Events[]   // Relasi One-to-Many: Satu Dashboard memiliki banyak Events
}

model Events {
  id              Int       @id @default(autoincrement())
  dashboardId     Int       
  eventName       String    
  image           String    
  price           Int       
  date            DateTime  
  time            String    
  location        String    
  description     String    
  availableTicket Int       @default(0)
  soldQuantity    Int       @default(0)
  eventType       String    @default("paid")
  categoryId      Int       
  published       Boolean   @default(false)
  createAt        DateTime  @default(now())
  dashboard       Dashboards @relation(fields: [dashboardId], references: [id])
  category        Categorys  @relation(fields: [categoryId], references: [id])
  promotion       Promotions[]
  reviews         Reviews[]
  ticket          Tickets[]
}

model Categorys{
  id Int @id @default(autoincrement())
  categoryName String
  events Events[]
}

model Promotions {
  id Int @id @unique @default(autoincrement())
  eventId Int
  discount String
  startDate DateTime @default(now())
  endDate DateTime
  event Events @relation(fields: [eventId], references: [id])
}

model Reviews{
  id Int @id @default(autoincrement())
  eventId Int @unique
  userId Int @unique
  rating Int @default(5)
  feedBack String
  event Events @relation(fields: [eventId], references: [id])
  user Users @relation(fields: [userId], references: [id])
}